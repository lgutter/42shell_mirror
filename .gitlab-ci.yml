variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CI_ENVIRONMENT: "true"

stages:
  - test
  - build

gcc-test:
  image: lgutter/codam_ci:latest
  stage: test
  before_script:
    - meson --version
    - ninja --version
    - meson build
  script:
    - ninja test -C build --verbose

gcc-coverage:
  image: lgutter/codam_ci:latest
  stage: test
  variables:
    COVERAGE_ENABLED: "true"
  before_script:
    - meson --version
    - ninja --version
    - meson build -Db_coverage=true
  script:
    - ninja test -C build --verbose
  after_script:
    - rm -rfv $(find . -regex ".*\.spec\.c\.gc[ndo][oav]")
    - ninja -C build coverage --verbose
    - mv build/meson-logs meson-logs
  artifacts:
    when: always
    paths:
      - meson-logs/

clang-test:
  stage: test
  image: lgutter/codam_ci:latest
  before_script:
    - meson --version
    - ninja --version
    - CC=clang meson build
  script:
    - ninja test -C build --verbose

arch-build:
  stage: build
  image: nloomans/codam:latest
  only:
    refs:
      - master
  before_script:
    - meson build
  script:
    - ninja -C build
  artifacts:
    when: always
    paths:
      - build/cetushell

ubuntu-build:
  stage: build
  image: lgutter/codam_ci
  only:
    refs:
      - master
  before_script:
    - meson build
  script:
    - ninja -C build
  artifacts:
    when: always
    paths:
      - build/cetushell

debian-build:
  stage: build
  image: lgutter/codam_debian_build
  only:
    refs:
      - master
  before_script:
    - meson build
  script:
    - ninja -C build
  artifacts:
    when: always
    paths:
      - build/cetushell
