# **************************************************************************** #
#                                                                              #
#                                                         ::::::::             #
#    ThePlan.plan                                       :+:    :+:             #
#                                                      +:+                     #
#    By: dkroeke <dkroeke@student.codam.nl>           +#+                      #
#                                                    +#+                       #
#    Created: 2020/01/21 10:31:17 by dkroeke        #+#    #+#                 #
#    Updated: 2020/01/21 11:30:05 by dkroeke       ########   odam.nl          #
#                                                                              #
# **************************************************************************** #

This is an overview of 21sh:

MANDATORY:

-Make a cheesecake from the recipe given in the subject.

-Everything from minishell which is :
    Working environmental variables, able to set and unset them.
    Working PATH=./ variable where all the binaries are stored. Execution in the shell by fork() and execve() for executables.
    Working builtins (first check builtins before executables)

-Termcaps : be able to edit the whole terminal input signals and output with line edition. (ft_select)
    Signals (man signals)
            ctrl+D kill processes
            ctrl+C The interrupt signal, sends SIGINT to the job running in the foreground.
            ctrl+Z 	The suspend signal, sends a SIGTSTP to a running program, thus stopping it and returning control to the shell.
    keycombo's
            left + right arrow : move cursor over the current line.
            up + down : Command history.
            Ctr+ x,c,v : Cut Copy Paste
            Ctrl+(left, right) : move on the line word by word.
            Home, End : move to beginning of line or end.
            Ctrl+(up,Down): move vertically through multiline input whilst staying in the same collumn or most apprpriate collumn.

- The “;” command line separator:
    must make a wrapper that splits the commands and executes them one by one.

- Pipes '|', must work for as many as wanted.

- The 4 following redirections “<”, “>”, “<<” et “>>”
    - > : redirect to file/ write to file or redirect to device... source > file/device  this will overwrite the previous file if existing. else it will create.
    - < : input redirection put a file within a command for example sending an email. in commandline: "Mail -s "Subject" to-address < Filename"
    - >> :
    HelpSauce: https://www.guru99.com/linux-redirection.html

- Filedescriptors
    filedescriptors must be handled properly
        File	                File Descriptor
        Standard Input STDIN	0
        Standard Output STDOUT	1
        Standard Error STDERR	2
    Server Administrators frequently, list directories and store both error and standard output into a file, which can be processed later. Here is the command.
    ls Documents ABC> dirlist 2>&1
    Here,

    which writes the output from one file to the input of another file. 2>&1 means that STDERR redirects to the target of STDOUT (which is the file dirlist)
    We are redirecting error output to standard output which in turn is being re-directed to file dirlist. Hence, both the output is written to file dirlist
    visual help for this > https://www.guru99.com/images/Redirection(1).png

-Manage Quotes (" ") and (' '):
    quotes must work within the execution line (multiline) while also keeping expansion in mind.
    words within quotes count as a single argument. To handle this, all argument in a line must be splitted not only by spaces byt also keeping quotes in mind.


-Command History: Cycle through history commands.
    Bash provides access to the list of commands you previously issued, which is known as your command history.
    The value of the HISTSIZE variable sets the number of commands that are saved in your history list.
    By default, this value is 500. These previously issued commands (known as your history list) are stored in your history file.
    Its default location is ~/.bash_history, and this location is stored in the shell variable HISTFILE.

    note(after editing a line in history it will be selected and thus not cycling through history anymore. after line edit back to history cycle)

    HelpSAUCE:  https://viewsourcecode.org/snaptoken/kilo/ (Build your own texteditor step by step)
            https://superuser.com/questions/715125/openssh-freebsd-screen-overwrite-when-closing-application/715563#715563 (Important info to know before creating own texteditor (terminfo explanation))

For 21sh to work properly we must do a lexical analysis on the input arguments (tokenizing).
    SAUCE: https://www.thecrazyprogrammer.com/2017/02/lexical-analyzer-in-c.html
            https://niols.fr/materials/papers/sle18.pdf








Product Backlog:

- terminal input
    - arrow left + right line edition
    - arrow up + down History
    - cntrl+c sigkill
    - backspace
    - tab
    - enter
    - ctrl + left + right move word per word
    - home & end
    - ctrl + up + down (move up down from multiline input)
- lexer analysis
- token parser
- redirections
- Pipes
- history
- builtins
- environmental variables
- command execute
- filedescriptor aggregetion
- error handling

CETUSH: Error (12): Malloc error in environment